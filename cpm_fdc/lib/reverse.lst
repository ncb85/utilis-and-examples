                              1 ; Small C 8080
                              2 ;	Coder (2.4,84/11/27)
                              3 ;	Front End (2.7,84/11/28)
                              4 ;	Front End for ASXXXX (2.8,13/01/20)
                              5 		;program area SMALLC_GENERATED is RELOCATABLE
                              6 		.module SMALLC_GENERATED
                              7 		.list   (err, loc, bin, eqt, cyc, lin, src, lst, md)
                              8 		.nlist  (pag)
                              9 		.area  SMALLC_GENERATED  (REL,CON,CSEG)
                             10 ;#include <stdio.h>
                             11 ;#define stdin 0
                             12 ;#define stdout 1
                             13 ;#define stderr 2
                             14 ;#define NULL 0
                             15 ;#define EOF (-1)
                             16 ;#define FILE char
                             17 ;/**
                             18 ; * Reverse a character string, reference CPL p 59
                             19 ; * @param s pointer to string
                             20 ; */
                             21 ;reverse(char *s) {
   0000                      22 reverse:
                             23 ;    int i, j;
   0000 C5            [12]   24 	push	b
   0001 C5            [12]   25 	push	b
                             26 ;    char c;
   0002 3B            [ 6]   27 	dcx 	sp
                             28 ;    i = 0;
   0003 21 03 00      [10]   29 	lxi 	h,#3
   0006 39            [10]   30 	dad 	sp
   0007 E5            [12]   31 	push	h
   0008 21 00 00      [10]   32 	lxi 	h,#0
   000B D1            [10]   33 	pop 	d
   000C CD 00 00      [18]   34 	call	ccpint
                             35 ;    j = strlen(s) - 1;
   000F 21 01 00      [10]   36 	lxi 	h,#1
   0012 39            [10]   37 	dad 	sp
   0013 E5            [12]   38 	push	h
   0014 21 09 00      [10]   39 	lxi 	h,#9
   0017 39            [10]   40 	dad 	sp
   0018 CD 00 00      [18]   41 	call	ccgint
   001B E5            [12]   42 	push	h
   001C 3E 01         [ 7]   43 	mvi 	a,#1
   001E CD 00 00      [18]   44 	call	strlen
   0021 C1            [10]   45 	pop 	b
   0022 E5            [12]   46 	push	h
   0023 21 01 00      [10]   47 	lxi 	h,#1
   0026 D1            [10]   48 	pop 	d
   0027 CD 00 00      [18]   49 	call	ccsub
   002A D1            [10]   50 	pop 	d
   002B CD 00 00      [18]   51 	call	ccpint
                             52 ;    while (i < j) {
   002E                      53 $2:
   002E 21 03 00      [10]   54 	lxi 	h,#3
   0031 39            [10]   55 	dad 	sp
   0032 CD 00 00      [18]   56 	call	ccgint
   0035 E5            [12]   57 	push	h
   0036 21 03 00      [10]   58 	lxi 	h,#3
   0039 39            [10]   59 	dad 	sp
   003A CD 00 00      [18]   60 	call	ccgint
   003D D1            [10]   61 	pop 	d
   003E CD 00 00      [18]   62 	call	cclt
   0041 7C            [ 4]   63 	mov 	a,h
   0042 B5            [ 4]   64 	ora 	l
   0043 CA C6 00      [10]   65 	jz  	$3
                             66 ;        c = s[i];
   0046 21 00 00      [10]   67 	lxi 	h,#0
   0049 39            [10]   68 	dad 	sp
   004A E5            [12]   69 	push	h
   004B 21 09 00      [10]   70 	lxi 	h,#9
   004E 39            [10]   71 	dad 	sp
   004F CD 00 00      [18]   72 	call	ccgint
   0052 E5            [12]   73 	push	h
   0053 21 07 00      [10]   74 	lxi 	h,#7
   0056 39            [10]   75 	dad 	sp
   0057 CD 00 00      [18]   76 	call	ccgint
   005A D1            [10]   77 	pop 	d
   005B 19            [10]   78 	dad 	d
   005C CD 00 00      [18]   79 	call	ccgchar
   005F D1            [10]   80 	pop 	d
   0060 7D            [ 4]   81 	mov 	a,l
   0061 12            [ 7]   82 	stax	d
                             83 ;        s[i] = s[j];
   0062 21 07 00      [10]   84 	lxi 	h,#7
   0065 39            [10]   85 	dad 	sp
   0066 CD 00 00      [18]   86 	call	ccgint
   0069 E5            [12]   87 	push	h
   006A 21 05 00      [10]   88 	lxi 	h,#5
   006D 39            [10]   89 	dad 	sp
   006E CD 00 00      [18]   90 	call	ccgint
   0071 D1            [10]   91 	pop 	d
   0072 19            [10]   92 	dad 	d
   0073 E5            [12]   93 	push	h
   0074 21 09 00      [10]   94 	lxi 	h,#9
   0077 39            [10]   95 	dad 	sp
   0078 CD 00 00      [18]   96 	call	ccgint
   007B E5            [12]   97 	push	h
   007C 21 05 00      [10]   98 	lxi 	h,#5
   007F 39            [10]   99 	dad 	sp
   0080 CD 00 00      [18]  100 	call	ccgint
   0083 D1            [10]  101 	pop 	d
   0084 19            [10]  102 	dad 	d
   0085 CD 00 00      [18]  103 	call	ccgchar
   0088 D1            [10]  104 	pop 	d
   0089 7D            [ 4]  105 	mov 	a,l
   008A 12            [ 7]  106 	stax	d
                            107 ;        s[j] = c;
   008B 21 07 00      [10]  108 	lxi 	h,#7
   008E 39            [10]  109 	dad 	sp
   008F CD 00 00      [18]  110 	call	ccgint
   0092 E5            [12]  111 	push	h
   0093 21 03 00      [10]  112 	lxi 	h,#3
   0096 39            [10]  113 	dad 	sp
   0097 CD 00 00      [18]  114 	call	ccgint
   009A D1            [10]  115 	pop 	d
   009B 19            [10]  116 	dad 	d
   009C E5            [12]  117 	push	h
   009D 21 02 00      [10]  118 	lxi 	h,#2
   00A0 39            [10]  119 	dad 	sp
   00A1 CD 00 00      [18]  120 	call	ccgchar
   00A4 D1            [10]  121 	pop 	d
   00A5 7D            [ 4]  122 	mov 	a,l
   00A6 12            [ 7]  123 	stax	d
                            124 ;        i++;
   00A7 21 03 00      [10]  125 	lxi 	h,#3
   00AA 39            [10]  126 	dad 	sp
   00AB E5            [12]  127 	push	h
   00AC CD 00 00      [18]  128 	call	ccgint
   00AF 23            [ 6]  129 	inx 	h
   00B0 D1            [10]  130 	pop 	d
   00B1 CD 00 00      [18]  131 	call	ccpint
   00B4 2B            [ 6]  132 	dcx 	h
                            133 ;        j--;
   00B5 21 01 00      [10]  134 	lxi 	h,#1
   00B8 39            [10]  135 	dad 	sp
   00B9 E5            [12]  136 	push	h
   00BA CD 00 00      [18]  137 	call	ccgint
   00BD 2B            [ 6]  138 	dcx 	h
   00BE D1            [10]  139 	pop 	d
   00BF CD 00 00      [18]  140 	call	ccpint
   00C2 23            [ 6]  141 	inx 	h
                            142 ;    }
   00C3 C3 2E 00      [10]  143 	jmp 	$2
   00C6                     144 $3:
                            145 ;    return (s);
   00C6 21 07 00      [10]  146 	lxi 	h,#7
   00C9 39            [10]  147 	dad 	sp
   00CA CD 00 00      [18]  148 	call	ccgint
   00CD C3 D0 00      [10]  149 	jmp 	$1
                            150 ;}
   00D0                     151 $1:
   00D0 33            [ 6]  152 	inx 	sp
   00D1 C1            [10]  153 	pop 	b
   00D2 C1            [10]  154 	pop 	b
   00D3 C9            [10]  155 	ret
                            156 		.area  SMALLC_GENERATED_DATA  (REL,CON,DSEG)
                            157 	.globl	reverse
                            158 	;extrn	strlen
                            159 
                            160 ;0 error(s) in compilation
                            161 ;	literal pool:0
                            162 ;	global pool:2
                            163 ;	Macro pool:103
                            164 	;	.end
